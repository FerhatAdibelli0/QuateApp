{"version":3,"sources":["pages/NotFound.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["NotFound","className","module","exports","QuoteItem","props","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","sortingAscending","URLSearchParams","search","get","sortedItems","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedData","data","error","useEffect","LoadingSpinner","length"],"mappings":"uJAIeA,UAJE,WACf,OAAO,mBAAGC,UAAU,WAAb,iC,mBCATC,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iFCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIJ,UAAWK,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIF,EAAMG,SAEZ,qCAAaH,EAAMI,YAErB,cAAC,IAAD,CAAMC,GAAE,kBAAaL,EAAMM,IAAMV,UAAU,MAA3C,iC,wBCuCSW,EApCG,SAACP,GACjB,IAXkBQ,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAEXC,EAA+C,QADjC,IAAIC,gBAAgBH,EAASI,QACZC,IAAI,QASnCC,GAvBYV,EAuBaR,EAAMQ,OAvBXC,EAuBmBK,EAtBtCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAoBxC,OACE,eAAC,WAAD,WACE,qBAAKV,UAAWK,IAAQqB,QAAxB,SACE,yBAAQC,QAZS,WACrBb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAmB,MAAQ,UAS1C,iBACOA,EAAmB,aAAe,iBAG3C,oBAAIlB,UAAWK,IAAQyB,KAAvB,SACGR,EAAYS,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,gCCMRuB,UAtCG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKrC,UAAU,WAAf,SACE,cAAC0C,EAAA,EAAD,MAKS,cAAXL,GAAgD,IAAtBC,EAAWK,OAErC,qBAAK3C,UAAU,WAAf,SACE,cAACD,EAAA,QAAD,MAIS,cAAXsC,GAA0BG,EACrB,qBAAKxC,UAAU,WAAf,kCAIP,8BACE,cAAC,EAAD,CAAWY,OAAQ0B","file":"static/js/5.ab5e8c90.chunk.js","sourcesContent":["const NotFound = () => {\r\n  return <p className=\"centered\">Not Found Page...</p>;\r\n};\r\n\r\nexport default NotFound;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1nICM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__onjZV\",\"sorting\":\"QuoteList_sorting__2SYbM\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n ","import { Fragment } from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const sortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${sortingAscending ? \"des\" : \"asc\"}`,\n    });\n  };\n\n  const sortedItems = sortQuotes(props.quotes, sortingAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>\n          Sort{sortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedItems.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport NotFound from \"./NotFound\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedData,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"completed\" && loadedData.length === 0) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <NotFound />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === \"completed\" && error) {\r\n    return <div className=\"centered\">Something went wrong</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={loadedData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}